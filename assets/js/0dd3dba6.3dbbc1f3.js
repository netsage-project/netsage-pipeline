(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{228:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),d=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=d(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(n),b=r,m=p["".concat(a,".").concat(b)]||p[b]||u[b]||i;return n?o.a.createElement(m,c(c({ref:t},l),{},{components:n})):o.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return d}));var r=n(3),o=n(7),i=(n(0),n(228)),a={id:"docker_dev_guide",title:"Docker Dev Guide",sidebar_label:"Docker Dev Guide"},c={unversionedId:"devel/docker_dev_guide",id:"version-2.1.0/devel/docker_dev_guide",isDocsHomePage:!1,title:"Docker Dev Guide",description:"Selecting a Version",source:"@site/versioned_docs/version-2.1.0/devel/docker.md",slug:"/devel/docker_dev_guide",permalink:"/netsage-pipeline/docs/devel/docker_dev_guide",editUrl:"https://github.com/netsage-project/netsage-pipeline/edit/master/website/versioned_docs/version-2.1.0/devel/docker.md",version:"2.1.0",sidebar_label:"Docker Dev Guide",sidebar:"version-2.1.0/Pipeline",previous:{title:"Pipeline Replay Dataset",permalink:"/netsage-pipeline/docs/devel/dev_dataset"},next:{title:"Revising Documentation",permalink:"/netsage-pipeline/docs/devel/docusaurus"}},s=[{value:"Selecting a Version",id:"selecting-a-version",children:[]},{value:"Installing",id:"installing",children:[]},{value:"Importer",id:"importer",children:[]},{value:"Handy Docker Commands",id:"handy-docker-commands",children:[{value:"Start the Containers",id:"start-the-containers",children:[]},{value:"Stop the Containers",id:"stop-the-containers",children:[]},{value:"Enter a Container Shell",id:"enter-a-container-shell",children:[]},{value:"View Container Logs",id:"view-container-logs",children:[]}]}],l={toc:s};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"selecting-a-version"},"Selecting a Version"),Object(i.b)("p",null,'You can use the "master" version or a tagged version.',Object(i.b)("br",{parentName:"p"}),"\n","To select a released version use the docker_select_version.sh script (see the Deployment Guide).\nIf you wish to use the development version (master branch) simply skip the docker_select_version.sh step."),Object(i.b)("h2",{id:"installing"},"Installing"),Object(i.b)("p",null,"See the Deployment Guide to learn how to set up collectors, your environment and override files, etc."),Object(i.b)("h2",{id:"importer"},"Importer"),Object(i.b)("p",null,'The importer "shared" config that Docker uses is defined in compose/netsage_shared.xml.  ',Object(i.b)("strong",{parentName:"p"}," NOTE: If you want to make changes to this file, you will need to rebuild the container")),Object(i.b)("h2",{id:"handy-docker-commands"},"Handy Docker Commands"),Object(i.b)("h3",{id:"start-the-containers"},"Start the Containers"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"docker-compose up -d \n")),Object(i.b)("h3",{id:"stop-the-containers"},"Stop the Containers"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"docker-compose stop && docker-compose rm \n")),Object(i.b)("h3",{id:"enter-a-container-shell"},"Enter a Container Shell"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"docker-compose exec logstash bash     #bash shell in logstash container\ndocker-compose exec importer bash     #bash shell in importer container\ndocker-compose exec rabbit bash       #bash shell in rabbit container\n")),Object(i.b)("h3",{id:"view-container-logs"},"View Container Logs"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"docker-compose logs -f              #view logs for all containers \ndocker-compose logs -f logstash     #view logs for logstash container\ndocker-compose logs -f importer     #view logs for importer container\ndocker-compose logs -f rabbit       #view logs for rabbit container\n")))}d.isMDXComponent=!0}}]);