(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{212:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),u=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),b=r,f=d["".concat(i,".").concat(b)]||d[b]||p[b]||o;return n?a.a.createElement(f,l(l({ref:t},c),{},{components:n})):a.a.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),o=(n(0),n(212)),i={id:"docker_dev_tag",title:"How to Tag a New Release",sidebar_label:"Taggin a Release"},l={unversionedId:"devel/docker_dev_tag",id:"devel/docker_dev_tag",isDocsHomePage:!1,title:"How to Tag a New Release",description:"To tag a new release, first updated the version number and Changes file, build the rpm, etc.  and upgrade on bare-metal hosts using yum. If all works fine, do the following steps to create new Docker images.",source:"@site/docs/devel/tag.md",slug:"/devel/docker_dev_tag",permalink:"/netsage-pipeline/docs/next/devel/docker_dev_tag",editUrl:"https://github.com/netsage-project/netsage-pipeline/edit/master/website/docs/devel/tag.md",version:"current",sidebar_label:"Taggin a Release",sidebar:"Pipeline",previous:{title:"Revising Documentation",permalink:"/netsage-pipeline/docs/next/devel/docusaurus"}},s=[{value:"In Github, Create a Release/Tag",id:"in-github-create-a-releasetag",children:[]},{value:"To Build and Push an Importer Image Manually",id:"to-build-and-push-an-importer-image-manually",children:[]},{value:"With Automation",id:"with-automation",children:[]},{value:"Versioned Docs",id:"versioned-docs",children:[]},{value:"New Version of Nfdump",id:"new-version-of-nfdump",children:[]},{value:"New Version of Logstash",id:"new-version-of-logstash",children:[]}],c={toc:s};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"To tag a new release, first updated the version number and Changes file, build the rpm, etc.  and upgrade on bare-metal hosts using yum. If all works fine, do the following steps to create new Docker images."),Object(o.b)("h2",{id:"in-github-create-a-releasetag"},"In Github, Create a Release/Tag"),Object(o.b)("p",null,"Be sure to copy info from the Changes file into the Release description."),Object(o.b)("p",null,"Do this first ???"),Object(o.b)("h2",{id:"to-build-and-push-an-importer-image-manually"},"To Build and Push an Importer Image Manually"),Object(o.b)("p",null,"Git clone the pipeline project and have the ?? branch checked out. "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"$ docker-compose build\n$ docker login\n$ docker push $image:$tag\n")),Object(o.b)("p",null,"This will build the image and push it to Docker Hub."),Object(o.b)("p",null,"The person doing this has to have a Docker Hub account and belong to the Netsage team (3 users are allowed, for the free level)."),Object(o.b)("h2",{id:"with-automation"},"With Automation"),Object(o.b)("h2",{id:"versioned-docs"},"Versioned Docs"),Object(o.b)("p",null,"A new set of versioned docs also has to be tagged. See the Docusaurus guide. "),Object(o.b)("p",null,"Does this have to happen before Building the image ??"),Object(o.b)("h2",{id:"new-version-of-nfdump"},"New Version of Nfdump"),Object(o.b)("p",null,"If a new version of dfdump has been released that we need,\n????"),Object(o.b)("h2",{id:"new-version-of-logstash"},"New Version of Logstash"),Object(o.b)("p",null,"If a new version of logstash has been released that we want everyone to use,\n???"))}u.isMDXComponent=!0}}]);