filter {

  # Tag SOURCE with Science Registry info - get info from fake geoip db holding scireg data
    geoip {
        id => "60-1"
        database => "/var/lib/grnoc/netsage/scireg.mmdb"
        default_database_type => "City"
        cache_size => 1000
        source => "[meta][src_ip]"
        target => "[meta][scireg][src]"
        tag_on_failure => []
    }
  # break up the json in city_name into indiv fields (target gets totally overwritten with the info from the json)
    json {
        id => "60-2"
        source => "[meta][scireg][src][city_name]"
        target => "[meta][scireg][src]"
    }

  # Tag DESTINATION with Science Registry info - get info from fake geoip db holding scireg data
  #     Skip if it's Multicast!
    if [meta][dst_organization] != "Multicast" {
        geoip {
            id => "60-3"
            database => "/var/lib/grnoc/netsage/scireg.mmdb"
            default_database_type => "City"
            cache_size => 1000
            source => "[meta][dst_ip]"
            target => "[meta][scireg][dst]"
            tag_on_failure => []
        }
        json {
            id => "60-4"
            source => "[meta][scireg][dst][city_name]"
            target => "[meta][scireg][dst]"
        }
    } 

  # Move project names to new fields
    if [meta][scireg][src][projects][0] {
        ruby {
            id => "60-5"
            code => "
                event.set('[meta][scireg][src][project_names]', event.get('[meta][scireg][src][projects]').map{ |n| n['project_name'] })
            "
        }
    }
    if [meta][scireg][dst][projects][0] {
        ruby {
            id => "60-6"
            code => "
                event.set('[meta][scireg][dst][project_names]', event.get('[meta][scireg][dst][projects]').map{ |n| n['project_name'] })
            "
        }
    }

  # Remove unneeded fields
    mutate {
        id => "60-7"
        remove_field => "[meta][scireg][src][org_description]"
        remove_field => "[meta][scireg][dst][org_description]"
        remove_field => "[meta][scireg][src][org_url]"
        remove_field => "[meta][scireg][dst][org_url]"
        remove_field => "[meta][scireg][src][org_country_code]"
        remove_field => "[meta][scireg][dst][org_country_code]"
        remove_field => "[meta][scireg][src][org_latitude]"
        remove_field => "[meta][scireg][dst][org_latitude]"
        remove_field => "[meta][scireg][src][org_longitude]"
        remove_field => "[meta][scireg][dst][org_longitude]"
        remove_field => "[meta][scireg][src][asn]"
        remove_field => "[meta][scireg][dst][asn]"
        remove_field => "[meta][scireg][src][description]"
        remove_field => "[meta][scireg][dst][description]"
        remove_field => "[meta][scireg][src][discipline_description]"
        remove_field => "[meta][scireg][dst][discipline_description]"
        remove_field => "[meta][scireg][src][role_description]"
        remove_field => "[meta][scireg][dst][role_description]"
        remove_field => "[meta][scireg][src][country_code]"
        remove_field => "[meta][scireg][dst][country_code]"
        remove_field => "[meta][scireg][src][projects]"  
        remove_field => "[meta][scireg][dst][projects]"
    }

}
