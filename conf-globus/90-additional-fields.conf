# Misc additional fields

filter {

        # sensor_group: Use dictionary to group together sensor IDs
        translate {
            id => "90-1"
            source => "[meta][sensor_id]"
            target => "[meta][sensor_group]"
            dictionary_path => "/usr/share/logstash/pipeline/support/sensor_groups.json"
            regex => true
        }

        # sensor_type: Use dictionary to set sensor_type such as Archive, Circuit, Exchange Point, etc.
        # Currently Not Used!
        #translate {
        #    id => "90-2"
        #    field => "[meta][sensor_id]"
        #    destination => "[meta][sensor_type]"
        #    dictionary_path => "/usr/share/logstash/pipeline/support/sensor_types.json"
        #    regex => true
        #}

        # country_scope: Determine whether flow endpoints are in the "domestic" country list and tag accordingly
        # Will skip adding country_scope if dst is Multicast or scope can't be determined.
        ruby {
            id => "90-3"
            path => "/usr/share/logstash/pipeline/ruby/domestic.rb"
            script_params => {
                "src_country_field" => "[meta][src_country_name]"
                "dst_country_field" => "[meta][dst_country_name]"
                "src_continent_field" => "[meta][src_continent]"
                "dst_continent_field" => "[meta][dst_continent]"
                "target_field"      => "[meta][country_scope]"
            }
            tag_on_exception => '_rubyexception in domestic.rb + e.message'
        }

        # is_network_testing: Tag network testing flows by looking at SciReg Discipline or ports used by PerfSonar
        if   [meta][scireg][dst][discipline] == "CS.Network Testing and Monitoring"
          or [meta][scireg][src][discipline] == "CS.Network Testing and Monitoring"
          or [meta][dst_port] in [5001, 5101, 5201]
          or [meta][src_port] in [5001, 5101, 5201] {
            mutate {
                id => "90-4"
                add_field => {"[meta][is_network_testing]" => "yes"}
	        # make sure discipline is filled in for traffic on those ports
                copy => { "CS.Network Testing and Monitoring" => "[meta][scireg][src][discipline]" }
                copy => { "CS.Network Testing and Monitoring" => "[meta][scireg][dst][discipline]" }
            }
        } else {
            mutate {
                id => "90-5"
                add_field => {"[meta][is_network_testing]" => "no"}
             }
        }
        # for Globus logs, tag if src = dst org
        if [meta][src_ip] == [meta][dst_ip] {
            mutate {
                id => "90-7"
                add_field => {"[meta][internal_transfer]" => "yes"}
            }
        } else {
            mutate {
                id => "90-8"
                add_field => {"[meta][internal_transfer]" => "no"}
             }
        }

        # Unique id based on five-tuple-plus-sensor + start time.
        # This is required by some of the dashboards!
        # Can possibly be used as the document id in elasticsearch to avoid duplicate records (see ES output filter) 
        fingerprint {
           id => '90-6'
           source => [
             '[flow_fingerprint]',
             '[start]'
           ]
           concatenate_sources => true
           target              => 'es_doc_id'
           method              => 'SHA256'
           key                 => 'create docid'
        }

}
